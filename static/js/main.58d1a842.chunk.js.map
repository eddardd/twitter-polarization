{"version":3,"sources":["pages lazy /^/.//.*$/ groupOptions: {} namespace object","components/Footer/styles.js","components/Footer/index.js","components/Header/styles.js","components/Header/index.js","router/config.js","globalStyles.js","router/index.js","translation.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Footer","styled","footer","NavLink","h4","Link","LogoContainer","a","section","div","FooterContainer","props","left","p","label","select","SvgIcon","lazy","Container","withTranslation","t","SocialLink","href","src","target","rel","aria-label","width","height","bottom","border","type","justify","align","style","paddingTop","to","Header","header","Burger","NotHidden","Menu","h5","CustomNavLinkSmall","Label","span","Outline","MenuOutlined","padding","Span","Button","routes","useState","isNavVisible","isSmallScreen","visible","setVisibility","onClose","MenuItem","scrollTo","document","getElementById","scrollIntoView","behavior","onClick","gutter","CSSTransition","in","timeout","classNames","unmountOnExit","closable","marginBottom","path","exact","component","Styles","createGlobalStyle","Router","fallback","routeItem","i18n","use","XHR","LanguageDetector","init","debug","lng","fallbackLng","keySeparator","interpolation","escapeValue","resources","en","translations","translationEn","es","translationEs","ns","defaultNS","Boolean","window","location","hostname","match","App","basename","I18nextProvider","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.58d1a842.chunk.js","sourcesContent":["var map = {\n\t\"./Home\": [\n\t\t41,\n\t\t0\n\t],\n\t\"./Home/\": [\n\t\t41,\n\t\t0\n\t],\n\t\"./Home/index\": [\n\t\t41,\n\t\t0\n\t],\n\t\"./Home/index.js\": [\n\t\t41,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 98;\nmodule.exports = webpackAsyncContext;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Footer = styled.footer`\n  background: rgb(249, 250, 252);\n  padding: 2.5rem 0;\n`;\n\nexport const Title = styled.h4`\n  font-size: 16px;\n  text-transform: uppercase;\n  color: #000;\n\n  @media screen and (max-width: 414px) {\n    padding: 1.5rem 0;\n  }\n`;\n\nexport const NavLink = styled(Link)`\n  display: block;\n  font-size: 1rem;\n  margin-bottom: 0.625rem;\n  transition: all 0.2s ease-in-out;\n  &:hover,\n  &:active,\n  &:focus {\n    color: #15418e;\n  }\n`;\n\nexport const Target = styled.a`\n  display: block;\n  font-size: 1rem;\n  margin-bottom: 0.625rem;\n  transition: all 0.2s ease-in-out;\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: #15418e;\n  }\n`;\n\nexport const Extra = styled.section`\n  background: rgb(249, 250, 252);\n  position: relative;\n  width: 100%;\n  padding-right: 25px;\n  padding-left: 25px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-bottom: 2rem;\n`;\n\nexport const LogoContainer = styled.div`\n  display: flex;\n  position: relative;\n`;\n\nexport const Select = styled.div`\n  line-height: 24px;\n\n  @media only screen and (min-width: 1024px) {\n    padding: 0 10%;\n  }\n`;\n\nexport const Para = styled.div`\n  color: rgba(2, 7, 62, 0.8);\n  max-width: 340px;\n  font-size: 14px;\n  width: 100%;\n`;\n\nexport const Large = styled(Link)`\n  font-size: 16px;\n  color: rgba(2, 7, 62, 0.8);\n  text-align: ${(props) => (props.left ? 'left' : '')};\n  padding: ${(props) => (props.left ? '0 10%' : '')};\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-transform: capitalize;\n  line-height: 24px;\n  display: block;\n  margin-bottom: 0.625rem;\n\n  &:hover {\n    color: rgb(255, 130, 92);\n  }\n`;\n\nexport const Chat = styled.p`\n  color: rgba(2, 7, 62, 0.8);\n  max-width: 85px;\n  border-bottom: 1px solid rgba(2, 7, 62, 0.8);\n  cursor: pointer;\n  margin-top: 1rem;\n\n  &:hover {\n    border-bottom: 1px solid rgb(255, 130, 92);\n    color: rgb(255, 130, 92);\n  }\n`;\n\nexport const Empty = styled.div`\n  position: relative;\n  height: 53px;\n`;\n\nexport const FooterContainer = styled.div`\n  max-width: 510px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 414px) {\n    padding: 2rem 0;\n    padding-right: 50%;\n  }\n\n  div {\n    cursor: pointer;\n    margin-right: 15px;\n    width: 25px;\n    height: 25px;\n\n    &:hover {\n      fill: rgb(255, 130, 92);\n    }\n  }\n`;\n\nexport const Hidden = styled.div`\n  display: contents;\n  width: 100%;\n\n  @media screen and (max-width: 414px) {\n    display: none;\n  }\n`;\n\nexport const Language = styled.h4`\n  font-size: 16px;\n  text-transform: uppercase;\n  color: #000;\n\n  @media screen and (max-width: 414px) {\n    padding: 1.5rem 0;\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  text-transform: uppercase;\n  color: #000;\n  display: block;\n  margin-bottom: 2rem;\n\n  @media screen and (max-width: 414px) {\n    padding: 1.5rem 0;\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const LangSelect = styled.select`\n  cursor: pointer;\n  border: none;\n  font-size: 1rem;\n  background: rgb(249, 250, 252);\n`;\n","import { lazy, Fragment } from 'react';\nimport { Row, Col } from 'antd';\nimport i18n from 'i18next';\nimport { withTranslation } from 'react-i18next';\nimport Fade from 'react-reveal/Fade';\n\nimport * as S from './styles';\n\nconst SvgIcon = lazy(() => import('../../common/SvgIcon'));\nconst Container = lazy(() => import('../../common/Container'));\n\nconst Footer = ({ t }) => {\n  const handleChange = (event) => {\n    i18n.changeLanguage(event.target.value);\n  };\n\n  const SocialLink = ({ href, src }) => {\n    return (\n      <a\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        key={src}\n        aria-label={src}\n      >\n        <SvgIcon src={src} width=\"25px\" height=\"25px\" />\n      </a>\n    );\n  };\n\n  return (\n    <Fragment>\n      <Fade bottom>\n        <S.Footer>\n          <Container border=\"false\">\n            <Row\n              type=\"flex\"\n              justify=\"space-between\"\n              align=\"middle\"\n              style={{ paddingTop: '3rem' }}\n            >\n              <S.NavLink to=\"/\">\n                <S.LogoContainer>\n                  <SvgIcon\n                    src=\"logo.svg\"\n                    aria-label=\"homepage\"\n                    width=\"101px\"\n                    height=\"64px\"\n                  />\n                </S.LogoContainer>\n              </S.NavLink>\n              <S.FooterContainer>\n                <SocialLink\n                  href=\"https://github.com/Adrinlol/create-react-app-adrinlol\"\n                  src=\"github.svg\"\n                />\n                <SocialLink\n                  href=\"https://twitter.com/Adrinlolx\"\n                  src=\"twitter.svg\"\n                />\n                <SocialLink\n                  href=\"https://www.linkedin.com/in/lasha-kakabadze/\"\n                  src=\"linkedin.svg\"\n                />\n                <SocialLink\n                  href=\"https://github.com/Adrinlol/\"\n                  src=\"instagram.svg\"\n                />\n                <SocialLink\n                  href=\"https://medium.com/@lashakakabadze/\"\n                  src=\"medium.svg\"\n                />\n              </S.FooterContainer>\n            </Row>\n          </Container>\n        </S.Footer>\n      </Fade>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(Footer);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { MenuOutlined } from '@ant-design/icons';\n\nexport const Header = styled.header`\n  padding: 1rem 0.5rem;\n`;\n\nexport const LogoContainer = styled(Link)`\n  display: flex;\n  padding-top: 1rem;\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 1280px;\n  padding-right: 25px;\n  padding-left: 25px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const NavLink = styled.div`\n  display: inline-block;\n  text-align: center;\n`;\n\nexport const CustomNavLink = styled.div`\n  width: 203px;\n  display: inline-block;\n\n  @media only screen and (max-width: 411px) {\n    width: 150px;\n  }\n\n  @media only screen and (max-width: 320px) {\n    width: 118px;\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  cursor: pointer;\n  width: ${(props) => (props.width ? '100%' : '110px')};\n  font-weight: 700;\n  text-align: center;\n  border-radius: 1.25rem;\n  display: inline-block;\n`;\n\nexport const Burger = styled.div`\n  @media only screen and (max-width: 768px) {\n    display: block !important;\n  }\n  padding: 1.25rem 1.25rem;\n  display: none;\n`;\n\nexport const NotHidden = styled.div`\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Menu = styled.h5`\n  font-size: 1.37rem;\n  margin-top: -0.45rem;\n  padding: 0 1.56rem 0 0;\n  font-weight: 600;\n  border-bottom: 5px solid #111b47;\n`;\n\nexport const CustomNavLinkSmall = styled(NavLink)`\n  font-size: 1rem;\n  color: #000000;\n  transition: color 0.2s ease-in;\n  margin: 0.25rem 2rem;\n\n  @media only screen and (max-width: 768px) {\n    margin: 1.25rem 2rem;\n  }\n`;\n\nexport const Label = styled.span`\n  font-size: 12px;\n  font-weight: 500;\n  color: #404041;\n  text-align: right;\n  display: flex;\n`;\n\nexport const Outline = styled(MenuOutlined)`\n  font-size: 22px;\n  padding-right: ${(props) => (props.padding ? '10px' : '')};\n`;\n\nexport const Span = styled.span`\n  cursor: pointer;\n`;\n","import { useState, Fragment, lazy } from \"react\";\nimport { Row, Col, Drawer } from \"antd\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { withTranslation } from \"react-i18next\";\n\nimport * as S from \"./styles\";\n\nconst SvgIcon = lazy(() => import(\"../../common/SvgIcon\"));\nconst Button = lazy(() => import(\"../../common/Button\"));\n\nconst Header = ({ t }) => {\n  const [isNavVisible] = useState(false);\n  const [isSmallScreen] = useState(false);\n  const [visible, setVisibility] = useState(false);\n\n  const showDrawer = () => {\n    setVisibility(!visible);\n  };\n\n  const onClose = () => {\n    setVisibility(!visible);\n  };\n\n  const MenuItem = () => {\n    const scrollTo = (id) => {\n      const element = document.getElementById(id);\n      element.scrollIntoView({\n        behavior: \"smooth\",\n      });\n      setVisibility(false);\n    };\n    return (\n      <Fragment>\n        <S.CustomNavLinkSmall onClick={() => scrollTo(\"about\")}>\n          <S.Span>{t(\"About\")}</S.Span>\n        </S.CustomNavLinkSmall>\n        <S.CustomNavLinkSmall onClick={() => scrollTo(\"mission\")}>\n          <S.Span>{t(\"Mission\")}</S.Span>\n        </S.CustomNavLinkSmall>\n        <S.CustomNavLinkSmall onClick={() => scrollTo(\"product\")}>\n          <S.Span>{t(\"Product\")}</S.Span>\n        </S.CustomNavLinkSmall>\n        <S.CustomNavLinkSmall\n          style={{ width: \"180px\" }}\n          onClick={() => scrollTo(\"contact\")}\n        >\n          <S.Span>\n            <Button>{t(\"Contact\")}</Button>\n          </S.Span>\n        </S.CustomNavLinkSmall>\n      </Fragment>\n    );\n  };\n\n  return (\n    <S.Header>\n      <S.Container>\n        <Row type=\"flex\" justify=\"space-between\" gutter={20}>\n          <S.LogoContainer to=\"/\" aria-label=\"homepage\">\n            <SvgIcon src=\"logo.svg\" />\n          </S.LogoContainer>\n          <S.NotHidden>\n            <MenuItem />\n          </S.NotHidden>\n          <S.Burger onClick={showDrawer}>\n            <S.Outline />\n          </S.Burger>\n        </Row>\n        <CSSTransition\n          in={!isSmallScreen || isNavVisible}\n          timeout={350}\n          classNames=\"NavAnimation\"\n          unmountOnExit\n        >\n          <Drawer closable={false} visible={visible} onClose={onClose}>\n            <Col style={{ marginBottom: \"2.5rem\" }}>\n              <S.Label onClick={onClose}>\n                <Col span={12}>\n                  <S.Menu>Menu</S.Menu>\n                </Col>\n                <Col span={12}>\n                  <S.Outline padding=\"true\" />\n                </Col>\n              </S.Label>\n            </Col>\n            <MenuItem />\n          </Drawer>\n        </CSSTransition>\n      </S.Container>\n    </S.Header>\n  );\n};\n\nexport default withTranslation()(Header);\n","const routes = [\n  {\n    path: ['/', '/home'],\n    exact: true,\n    component: 'Home',\n  },\n];\n\nexport default routes;\n","import { createGlobalStyle } from 'styled-components';\n\nconst Styles = createGlobalStyle`\n\n    body,\n    html,\n    a {\n        font-family: 'Ubuntu', sans-serif;\n    }\n\n\n    body {\n        margin:0;\n        padding:0;\n        border: 0;\n        outline: 0;\n        background: #fff;\n        overflow-x: hidden;\n    }\n\n    a:hover {\n        color: #000;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        font-family: 'Ubuntu', sans-serif;\n        color: #0a1f44;\n        font-size: 2.575rem;\n        line-height: 3.0625rem;\n\n        @media only screen and (max-width: 414px) {\n          font-size: 1.625rem;\n        }\n    }\n\n    p {\n        color: #343D48;\n        font-size: 1.125rem;\n    }\n\n    h1 {\n        font-weight: 600;\n    }\n\n    a {\n        text-decoration: none;\n        outline: none;\n        color: #2E186A;\n\n        :hover {\n            color: #2e186a;\n        }\n    }\n\n    *:focus {\n        outline: none;\n    }\n\n    .about-block-image svg {\n        text-align: center;\n    }\n\n    .ant-drawer-body {\n        display: flex;\n        flex-direction: column;\n        padding: 1.25rem;\n        text-align: left;\n        padding-top: 2.5rem;\n        padding-right: 2rem;\n    }\n\n    .anticon,\n    .ant-notification-notice-icon-success {\n        color: rgb(255,130,92);\n    }\n`;\n\nexport default Styles;\n","import { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nimport routes from './config';\nimport GlobalStyles from '../globalStyles';\n\nfunction Router() {\n  return (\n    <Suspense fallback={null}>\n      <GlobalStyles />\n      <Switch>\n        {routes.map((routeItem) => {\n          return (\n            <Route\n              key={routeItem.component}\n              path={routeItem.path}\n              exact={routeItem.exact}\n              component={lazy(() => import(`../pages/${routeItem.component}`))}\n            />\n          );\n        })}\n      </Switch>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default Router;\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport XHR from 'i18next-xhr-backend';\n\nimport translationEn from './locales/en/translation.json';\nimport translationEs from './locales/es/translation.json';\n\ni18n\n  .use(XHR)\n  .use(LanguageDetector)\n  .init({\n    debug: false,\n    lng: 'en',\n    fallbackLng: 'en',\n\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n    },\n\n    resources: {\n      en: {\n        translations: translationEn,\n      },\n      es: {\n        translations: translationEs,\n      },\n    },\n    ns: ['translations'],\n    defaultNS: 'translations',\n  });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport 'antd/dist/antd.css';\n\nimport Router from './router';\nimport i18n from './translation';\nimport * as serviceWorker from './serviceWorker';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={'/twitter-polarization/'}>\n      <I18nextProvider i18n={i18n}>\n        <Router />\n      </I18nextProvider>\n    </BrowserRouter>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}